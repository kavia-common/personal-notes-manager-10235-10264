{"is_source_file": true, "format": "TypeScript", "description": "This file provides utility functions for managing notes stored in localStorage, including loading, saving, creating, updating, and deleting notes. It also defines the Note type and a helper for generating unique IDs.", "external_files": ["localStorage", "crypto"], "external_methods": ["localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify", "Date.now", "crypto.randomUUID"], "published": ["loadNotes", "saveNotes", "createNote", "updateNote", "deleteNote", "Note"], "classes": [], "methods": [{"name": "export function loadNotes(): Note[] { loadNotes", "description": "Loads all notes from localStorage, returning an array of Note objects or an empty array if none found or on error.", "scope": "", "scopeKind": ""}, {"name": "export function saveNotes(notes: Note[]): void { saveNotes", "description": "Persists an array of Note objects to localStorage.", "scope": "", "scopeKind": ""}, {"name": "export function createNote(partial: Pick<Note, \"title\" | \"content\">): Note { createNote", "description": "Creates a new note with a unique ID, current timestamp, and provided title and content, then saves it.", "scope": "", "scopeKind": ""}, {"name": "export function updateNote(id: string, patch: Partial<Pick<Note, \"title\" | \"content\">>): Note | / updateNote", "description": "Updates an existing note identified by its ID with provided partial data, updates the timestamp, and saves changes.", "scope": "", "scopeKind": ""}, {"name": "export function deleteNote(id: string): boolean { deleteNote", "description": "Deletes a note by ID, returning true if successfully removed.", "scope": "", "scopeKind": ""}, {"name": "function cryptoRandomId(): string { cryptoRandomId", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify", "Date.now", "crypto.randomUUID"], "search-terms": ["localStorage notes management", "TypeScript note utility", "storage create update delete", "Note type definition", "ID generation"], "state": 2, "file_id": 21, "knowledge_revision": 43, "git_revision": "", "ctags": [{"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^const STORAGE_KEY = \"qwik-notes-v1\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "changed", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^  const changed = next.length !== notes.length;$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^export function createNote(partial: Pick<Note, \"title\" | \"content\">): Note {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "cryptoRandomId", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^function cryptoRandomId(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^export function deleteNote(id: string): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^    ...notes[idx],$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^  const idx = notes.findIndex((n) => n.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "loadNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^export function loadNotes(): Note[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^  const next = notes.filter((n) => n.id !== id);$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^  const note: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^  const notes = loadNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^  const notes = loadNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^  const notes = loadNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^  const now = Date.now();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "parsed", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^    const parsed: Note[] = JSON.parse(raw);$/", "language": "TypeScript", "kind": "constant", "scope": "loadNotes", "scopeKind": "function"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^    const raw = localStorage.getItem(STORAGE_KEY);$/", "language": "TypeScript", "kind": "constant", "scope": "loadNotes", "scopeKind": "function"}, {"_type": "tag", "name": "saveNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^export function saveNotes(notes: Note[]): void {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^    title: (patch.title ?? notes[idx].title).trim(),$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^export function updateNote(id: string, patch: Partial<Pick<Note, \"title\" | \"content\">>): Note | /", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-10235-10264/notes_frontend/src/utils/storage.ts", "pattern": "/^  const updated: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}], "hash": "f55b9291a0ec942fe2c130f97071119d", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/utils/storage.ts", "revision_history": [{"43": ""}]}